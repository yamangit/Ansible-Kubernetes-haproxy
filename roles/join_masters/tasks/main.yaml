- name: Generate master join command
  ansible.builtin.shell: |
    #!/bin/bash
    set -o pipefail
    echo "$(sudo kubeadm token create --print-join-command) --control-plane --certificate-key $(sudo kubeadm init phase upload-certs --upload-certs 2>/dev/null | grep -vw -e certificate -e Namespace) --apiserver-advertise-address={{ hostvars[groups['master'][1]]['ansible_host'] }}"
  args:
    executable: /bin/bash
  register: master_join_command
  changed_when: true
  when: inventory_hostname == groups['master'][0]

- name: Save master join command to template file
  ansible.builtin.copy:
    content: "{{ master_join_command.stdout }}"
    dest: master.join.j2
    mode: 0644
  when: inventory_hostname == groups['master'][0]

- name: Fetch master.join.j2 to local machine
  ansible.builtin.fetch:
    src: master.join.j2
    dest: roles/join_masters/templates/masters.join.j2
    flat: yes
  when: inventory_hostname == groups['master'][0]

- name: Read master join command from file
  ansible.builtin.template:
    src: masters.join.j2
    dest: /home/{{ ansible_user }}/master.join.sh
    mode: "0755"
  when: "ansible_hostname == groups['master'][1]"

- name: Execute command from file on remote hosts
  ansible.builtin.shell: |
    #!/bin/bash
    set -o pipefail
    /home/{{ ansible_user }}/master.join.sh
  args:
    executable: /bin/bash
  register: command_output
  changed_when: false
  become: true
  when: "ansible_hostname == groups['master'][1]"