- name: Disable swap
  ansible.builtin.shell: |
    #!/bin/bash
    set -o pipefail
    sudo swapoff -a
  args:
      executable: /bin/bash
  register: command_output2
  changed_when: command_output2.rc != 0

- name: Comment out swap entry in /etc/fstab
  ansible.builtin.lineinfile:
    path: /etc/fstab
    regexp: '^/swap.img.*'
    line: '#\1'

- name: Stop process holding dpkg lock
  ansible.builtin.shell: |
    #!/bin/bash
    set -o pipefail
    killall unattended-upgr
  args:
    executable: /bin/bash
  failed_when: false
  ignore_errors: true
  register: ignore_errors_register1
  changed_when: false

- name: Delete dpkg lock file
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  loop:
    - /var/lib/dpkg/lock
    - /var/lib/dpkg/lock-frontend
  ignore_errors: true
  register: ignore_errors_register

- name: Disable Firewall
  ansible.builtin.service:
    name: ufw
    state: stopped
    enabled: false

- name: Uninstall Firewall (ufw)
  ansible.builtin.apt:
    name: ufw
    state: absent

- name: Update apt cache
  ansible.builtin.apt:
    update_cache: true

- name: Install containerd dependencies
  ansible.builtin.apt:
    update_cache: true
    name:
      - curl
      - gnupg2
      - software-properties-common
      - apt-transport-https
      - ca-certificates

- name: Import Docker GPG key
  ansible.builtin.apt_key:
    keyring: /etc/apt/trusted.gpg.d/docker.gpg
    state: present
    url: https://download.docker.com/linux/ubuntu/gpg

- name: Add Docker repository
  ansible.builtin.apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
    state: present
    filename: docker
- name: Install containerd
  ansible.builtin.apt:
    name: containerd.io=1.6.4-1
    state: present
    update_cache: true
    allow_downgrades: true
  become: true

- name: Hold containerd.io packages
  ansible.builtin.dpkg_selections:
    name: "{{ item }}"
    selection: hold
  with_items:
    - containerd
    - containerd.io

- name: Create containerd.conf file
  ansible.builtin.copy:
    dest: /etc/modules-load.d/containerd.conf
    content: |
      overlay
      br_netfilter
    owner: root
    group: root
    mode: "0644"
  become: yes

- name: Load kernel modules
  ansible.builtin.command: modprobe {{ item }}
  with_items:
    - overlay
    - br_netfilter
  changed_when: false

- name: Create kubernetes.conf file
  ansible.builtin.copy:
    dest: /etc/sysctl.d/kubernetes.conf
    content: |
      net.bridge.bridge-nf-call-ip6tables = 1
      net.bridge.bridge-nf-call-iptables = 1
      net.ipv4.ip_forward = 1
    owner: root
    group: root
    mode: "0644"
  become: yes

- name: Reload kernel parameters
  ansible.builtin.shell: |
    #!/bin/bash
    set -o pipefail
    sysctl --system
  args:
    executable: /bin/bash
  register: command_output
  changed_when: command_output.rc != 0

- name: Execute containerd command
  ansible.builtin.shell: |
    #!/bin/bash
    set -o pipefail
    containerd config default | sudo tee /etc/containerd/config.toml
  args:
    executable: /bin/bash
  register: command_output1
  changed_when: command_output1.rc != 0

- name: Update containerd config
  ansible.builtin.replace:
    path: /etc/containerd/config.toml
    regexp: 'SystemdCgroup \= false'
    replace: 'SystemdCgroup = true'
  notify: Restart containerd

- name: Configure cgroup in grub
  ansible.builtin.lineinfile:
    path: /etc/default/grub
    state: present
    regexp: "^GRUB_CMDLINE_LINUX_DEFAULT="
    line: 'GRUB_CMDLINE_LINUX_DEFAULT="cgroup_no_v1=net_prio,net_cls cgroup_enable=0"'
  notify: Update GRUB

- name: Import Kubernetes GPG key
  ansible.builtin.apt_key:
    keyring: /etc/apt/trusted.gpg.d/kubernetes.gpg
    state: present
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg

- name: Add Kubernetes apt repository
  ansible.builtin.apt_repository:
    repo: deb http://apt.kubernetes.io/ kubernetes-xenial main
    state: present

- name: Disable cgroup
  ansible.builtin.lineinfile:
    path: /etc/default/grub
    regexp: '^GRUB_CMDLINE_LINUX_DEFAULT="(.*)"'
    line: 'GRUB_CMDLINE_LINUX_DEFAULT="\1 systemd.unified_cgroup_hierarchy=0"'
    backrefs: true

- name: Install Kubernetes packages
  ansible.builtin.apt:
    name:
      - kubelet=1.25.0-00
      - kubeadm=1.25.0-00
      - kubectl=1.25.0-00
    state: present
    update_cache: true
    allow_downgrades: true
  become: true

- name: Hold Kubernetes packages
  ansible.builtin.dpkg_selections:
    name: "{{ item }}"
    selection: hold
  with_items:
    - kubeadm
    - kubectl
    - kubelet

- name: Install SELinux utils
  ansible.builtin.apt:
    name: selinux-utils
    state: present

- name: Reboot the host
  ansible.builtin.reboot:
    reboot_timeout: 300
    msg: "Restarting the host"
    pre_reboot_delay: 5
